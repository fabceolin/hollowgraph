name: Create GitHub Release

on:
  push:
    tags:
      - 'v*' # Trigger on tags starting with 'v'

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Build package
        run: python setup.py sdist bdist_wheel
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Get Asset name
        run: |
          export PKG_NAME=$(ls dist/*.whl | head -n1 | xargs basename)
          echo "PKG_NAME=${PKG_NAME}" >> $GITHUB_ENV

      - name: Upload Release Asset (Wheel)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/${{ env.PKG_NAME }}
          asset_name: ${{ env.PKG_NAME }}
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Source)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/${{ github.event.repository.name }}-${{ github.ref_name }}.tar.gz
          asset_name: ${{ github.event.repository.name }}-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip
